# Generated by Django 2.2.12 on 2020-05-05 15:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pttrack.validators
import simple_history.models
import workup.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pttrack', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic_date', models.DateField()),
            ],
            options={
                'ordering': ['-clinic_date'],
            },
        ),
        migrations.CreateModel(
            name='ClinicType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DiagnosisType',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Workup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('written_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('chief_complaint', models.CharField(max_length=1000, verbose_name='CC')),
                ('diagnosis', models.CharField(max_length=1000, verbose_name='Dx')),
                ('HPI', models.TextField(verbose_name='HPI')),
                ('PMH_PSH', models.TextField(verbose_name='PMH/PSH')),
                ('meds', models.TextField(verbose_name='Medications')),
                ('allergies', models.TextField()),
                ('fam_hx', models.TextField(verbose_name='Family History')),
                ('soc_hx', models.TextField(verbose_name='Social History')),
                ('ros', models.TextField(verbose_name='ROS')),
                ('hr', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Heart Rate')),
                ('bp_sys', models.PositiveSmallIntegerField(blank=True, null=True, validators=[workup.validators.validate_bp_systolic], verbose_name='Systolic')),
                ('bp_dia', models.PositiveSmallIntegerField(blank=True, null=True, validators=[workup.validators.validate_bp_diastolic], verbose_name='Diastolic')),
                ('rr', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Respiratory Rate')),
                ('t', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Temperature')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('pe', models.TextField(verbose_name='Physical Examination')),
                ('labs_ordered_quest', models.TextField(blank=True, null=True, verbose_name='Labs Ordered from Quest')),
                ('labs_ordered_internal', models.TextField(blank=True, null=True, verbose_name='Labs Ordered Internally')),
                ('rx', models.TextField(blank=True, null=True, verbose_name='Prescription Orders')),
                ('got_voucher', models.BooleanField(default=False)),
                ('voucher_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('patient_pays', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('got_imaging_voucher', models.BooleanField(default=False)),
                ('imaging_voucher_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('patient_pays_imaging', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('will_return', models.BooleanField(default=False, help_text='Will the pt. return to SNHC?')),
                ('A_and_P', models.TextField()),
                ('signed_date', models.DateTimeField(blank=True, null=True)),
                ('attending', models.ForeignKey(blank=True, help_text='Which attending saw the patient?', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='attending_physician', to='pttrack.Provider', validators=[pttrack.validators.validate_attending])),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Provider')),
                ('author_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.ProviderType')),
                ('clinic_day', models.ForeignKey(help_text='When was the patient seen?', on_delete=django.db.models.deletion.PROTECT, to='workup.ClinicDate')),
                ('diagnosis_categories', models.ManyToManyField(to='workup.DiagnosisType')),
                ('other_volunteer', models.ManyToManyField(blank=True, help_text='Which other volunteer(s) did you work with (if any)?', related_name='other_volunteer', to='pttrack.Provider')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Patient')),
                ('referral_location', models.ManyToManyField(blank=True, to='pttrack.ReferralLocation')),
                ('referral_type', models.ManyToManyField(blank=True, to='pttrack.ReferralType')),
                ('signer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='signed_workups', to='pttrack.Provider', validators=[pttrack.validators.validate_attending])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgressNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('written_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('signed_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Provider')),
                ('author_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.ProviderType')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Patient')),
                ('signer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='signed_progress_notes', to='pttrack.Provider', validators=[pttrack.validators.validate_attending])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalWorkup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('written_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_modified', models.DateTimeField(blank=True, editable=False)),
                ('chief_complaint', models.CharField(max_length=1000, verbose_name='CC')),
                ('diagnosis', models.CharField(max_length=1000, verbose_name='Dx')),
                ('HPI', models.TextField(verbose_name='HPI')),
                ('PMH_PSH', models.TextField(verbose_name='PMH/PSH')),
                ('meds', models.TextField(verbose_name='Medications')),
                ('allergies', models.TextField()),
                ('fam_hx', models.TextField(verbose_name='Family History')),
                ('soc_hx', models.TextField(verbose_name='Social History')),
                ('ros', models.TextField(verbose_name='ROS')),
                ('hr', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Heart Rate')),
                ('bp_sys', models.PositiveSmallIntegerField(blank=True, null=True, validators=[workup.validators.validate_bp_systolic], verbose_name='Systolic')),
                ('bp_dia', models.PositiveSmallIntegerField(blank=True, null=True, validators=[workup.validators.validate_bp_diastolic], verbose_name='Diastolic')),
                ('rr', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Respiratory Rate')),
                ('t', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Temperature')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('pe', models.TextField(verbose_name='Physical Examination')),
                ('labs_ordered_quest', models.TextField(blank=True, null=True, verbose_name='Labs Ordered from Quest')),
                ('labs_ordered_internal', models.TextField(blank=True, null=True, verbose_name='Labs Ordered Internally')),
                ('rx', models.TextField(blank=True, null=True, verbose_name='Prescription Orders')),
                ('got_voucher', models.BooleanField(default=False)),
                ('voucher_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('patient_pays', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('got_imaging_voucher', models.BooleanField(default=False)),
                ('imaging_voucher_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('patient_pays_imaging', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('will_return', models.BooleanField(default=False, help_text='Will the pt. return to SNHC?')),
                ('A_and_P', models.TextField()),
                ('signed_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('attending', models.ForeignKey(blank=True, db_constraint=False, help_text='Which attending saw the patient?', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Provider', validators=[pttrack.validators.validate_attending])),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Provider')),
                ('author_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.ProviderType')),
                ('clinic_day', models.ForeignKey(blank=True, db_constraint=False, help_text='When was the patient seen?', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='workup.ClinicDate')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Patient')),
                ('signer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Provider', validators=[pttrack.validators.validate_attending])),
            ],
            options={
                'verbose_name': 'historical workup',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgressNote',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('written_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_modified', models.DateTimeField(blank=True, editable=False)),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('signed_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Provider')),
                ('author_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.ProviderType')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Patient')),
                ('signer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Provider', validators=[pttrack.validators.validate_attending])),
            ],
            options={
                'verbose_name': 'historical progress note',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='clinicdate',
            name='clinic_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workup.ClinicType'),
        ),
    ]
